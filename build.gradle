plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'jp.co.solxyz.jsn'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.12'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.14'
    // https://mvnrepository.com/artifact/org.springframework.session/spring-session-jdbc
    implementation group: 'org.springframework.session', name: 'spring-session-jdbc', version: '3.2.2'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'
    // https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-community-dialects
    implementation 'org.hibernate.orm:hibernate-community-dialects'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.xerial:sqlite-jdbc:3.44.1.0'
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-validator
    implementation 'org.hibernate:hibernate-validator:8.0.1.Final'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// SQLiteDBを起動し、初期データを挿入する
tasks.register('setupDatabase', Exec) {
    // SQLiteのCLIのパス
    def sqliteCmdPath = "./sqlite/sqlite3.exe"
    // .sqlファイルのパス
    def sqlFilePath = 'sql/sql.sql'
    // dbファイルの相対パス
    def dbFilePath = "./sqlite/spring_boot_advanced_exam.db"

    // dbファイルが重複するとエラーが出る
    onlyIf { !file(dbFilePath).exists() }
    commandLine sqliteCmdPath, dbFilePath, '.read ' + sqlFilePath
}

bootRun.dependsOn setupDatabase
